# 1 "ms_scanner.mll"
 
(* Copyright 2013 Dumitru Potop Butucaru ( email: dumitru.potop_butucaru@inria.fr ).

   This program is free software: you can redistribute it and/or
   modify it under the terms of the GNU General Public License as
   published by the Free Software Foundation, either version 3 of the
   License, or (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>
*)
open Ms_syntax_tree ;;
open Ms_parser ;;

let scanner_debug_mode = true ;;
let scanner_debug_print text =
  if scanner_debug_mode 
  then (Printf.printf "Scanner debug: %s\n" text ; flush stdout)
  else ()
;;


let keyword_list =
  [("process", Lprocess);
   ("procedure", Lprocedure);
   ("enum", Lenum);
   ("type", Ltype);
   ("in", Lin);
   ("out", Lout);
   ("local", Llocal);
   ("when", Lwhen);
   ("default", Ldefault);
   ("call", Lcall);
   ("end", Lend);
   ("where", Lwhere);
   ("submodule", Lsubmodule);
   ("constant", Lconstant);
   ("not", Lnot);
   ("and", Land);
   ("or", Lor);
 ] ;;

let rec is_keyword str lst =
  if lst = [] then false
  else if str=(fst (List.hd lst)) then true 
  else is_keyword str (List.tl lst) ;;

let rec get_keyword_code str lst =
  if str=(fst (List.hd lst)) then (snd (List.hd lst))
  else get_keyword_code str (List.tl lst) ;;

let rec get_keyword_name id lst =
  if lst = [] then failwith "Ms_scanner::get_keyword_name - unexpected id"
  else if id=(snd (List.hd lst)) then (fst (List.hd lst))
  else get_keyword_name id (List.tl lst) ;;


# 65 "ms_scanner.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\226\255\227\255\228\255\230\255\231\255\233\255\235\255\
    \000\000\237\255\003\000\240\255\031\000\243\255\244\255\245\255\
    \246\255\047\000\077\000\160\000\241\000\252\255\098\001\064\001\
    \255\255\253\255\247\255\248\255\249\255\177\001\252\001\071\002\
    \002\000\018\000\025\000\031\000\021\000\250\255\242\255\239\255\
    \234\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \019\000\255\255\017\000\255\255\023\000\255\255\255\255\255\255\
    \255\255\255\255\004\000\004\000\004\000\255\255\255\255\001\000\
    \255\255\255\255\255\255\255\255\255\255\004\000\004\000\004\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default = 
   "\255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\255\255\000\000\255\255\000\000\000\000\000\000\
    \000\000\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\024\000\024\000\000\000\000\000\024\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \024\000\004\000\033\000\001\000\017\000\022\000\000\000\000\000\
    \016\000\015\000\007\000\009\000\003\000\008\000\000\000\000\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\012\000\006\000\010\000\011\000\040\000\005\000\
    \039\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\014\000\038\000\013\000\020\000\018\000\
    \032\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\019\000\
    \018\000\018\000\018\000\034\000\002\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\035\000\
    \036\000\037\000\000\000\000\000\000\000\000\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \000\000\000\000\000\000\000\000\018\000\000\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\000\000\000\000\000\000\000\000\018\000\
    \021\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \029\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\026\000\028\000\000\000\027\000\000\000\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\000\000\000\000\000\000\000\000\
    \018\000\000\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\022\000\022\000\022\000\022\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\022\000\022\000\022\000\022\000\022\000\025\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\000\000\000\000\000\000\000\000\
    \018\000\000\000\018\000\018\000\018\000\018\000\030\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\000\000\
    \000\000\000\000\000\000\018\000\000\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\031\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\000\000\000\000\000\000\000\000\018\000\000\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\032\000\000\000\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\008\000\000\000\
    \010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\012\000\000\000\000\000\000\000\
    \017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\033\000\000\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\034\000\
    \035\000\036\000\255\255\255\255\255\255\255\255\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \255\255\255\255\255\255\255\255\018\000\255\255\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\255\255\255\255\255\255\255\255\019\000\
    \000\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\020\000\020\000\255\255\020\000\255\255\
    \255\255\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\255\255\255\255\255\255\255\255\
    \020\000\255\255\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\022\000\022\000\022\000\022\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\255\255\255\255\255\255\255\255\
    \029\000\255\255\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\255\255\
    \255\255\255\255\255\255\030\000\255\255\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\255\255\255\255\255\255\255\255\031\000\255\255\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec lexer lexbuf =
    __ocaml_lex_lexer_rec lexbuf 0
and __ocaml_lex_lexer_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 65 "ms_scanner.mll"
                          ( lexer lexbuf )
# 323 "ms_scanner.ml"

  | 1 ->
# 67 "ms_scanner.mll"
  ( 
			(*let symb_start = Lexing.lexeme_start lexbuf in scanner_debug_print("Scanner:Constante:"^(int_of_string symb_start)) ; *)
			LINT (int_of_string(Lexing.lexeme lexbuf)) )
# 330 "ms_scanner.ml"

  | 2 ->
# 70 "ms_scanner.mll"
                                       ( lexer lexbuf )
# 335 "ms_scanner.ml"

  | 3 ->
# 71 "ms_scanner.mll"
        ( scanner_debug_print "Scanner:Eof" ; Leof )
# 340 "ms_scanner.ml"

  | 4 ->
# 73 "ms_scanner.mll"
    (
     
     let str= Lexing.lexeme lexbuf in 
     if is_keyword str keyword_list then 
       (
	scanner_debug_print ("Scanner:Keyword:"^str) ;
	get_keyword_code str keyword_list
       )
     else 
       (
	scanner_debug_print ("Scanner:Identifier:"^str) ;
	Lidentifier str
       )
   )
# 358 "ms_scanner.ml"

  | 5 ->
# 87 "ms_scanner.mll"
              (  scanner_debug_print "Scanner:Ldelay" ; Ldelay )
# 363 "ms_scanner.ml"

  | 6 ->
# 88 "ms_scanner.mll"
          (  scanner_debug_print "Scanner:Lclockplus" ; Lclockplus )
# 368 "ms_scanner.ml"

  | 7 ->
# 89 "ms_scanner.mll"
          (  scanner_debug_print "Scanner:Lclockminus" ; Lclockminus )
# 373 "ms_scanner.ml"

  | 8 ->
# 90 "ms_scanner.mll"
          (  scanner_debug_print "Scanner:Lclocktimes" ; Lclocktimes )
# 378 "ms_scanner.ml"

  | 9 ->
# 91 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lopen" ; Lopen )
# 383 "ms_scanner.ml"

  | 10 ->
# 92 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lclose" ; Lclose )
# 388 "ms_scanner.ml"

  | 11 ->
# 93 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lsqopen" ; Lsqopen )
# 393 "ms_scanner.ml"

  | 12 ->
# 94 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lsqclose" ; Lsqclose )
# 398 "ms_scanner.ml"

  | 13 ->
# 95 "ms_scanner.mll"
         (  scanner_debug_print "Scanner:Lassign" ; Lassign )
# 403 "ms_scanner.ml"

  | 14 ->
# 96 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lclock" ; Lclock )
# 408 "ms_scanner.ml"

  | 15 ->
# 97 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lequal" ; Lequal )
# 413 "ms_scanner.ml"

  | 16 ->
# 98 "ms_scanner.mll"
         (  scanner_debug_print "Scanner:Lleq" ; Lleq )
# 418 "ms_scanner.ml"

  | 17 ->
# 99 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lless" ; Lless )
# 423 "ms_scanner.ml"

  | 18 ->
# 100 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lplus" ; Lplus )
# 428 "ms_scanner.ml"

  | 19 ->
# 101 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lminus" ; Lminus )
# 433 "ms_scanner.ml"

  | 20 ->
# 102 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Ltimes" ; Ltimes )
# 438 "ms_scanner.ml"

  | 21 ->
# 103 "ms_scanner.mll"
         ( scanner_debug_print "Scanner:Larrow" ; Larrow )
# 443 "ms_scanner.ml"

  | 22 ->
# 104 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lsemicolon" ; Lsemicolon )
# 448 "ms_scanner.ml"

  | 23 ->
# 105 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lcolon" ; Lcolon )
# 453 "ms_scanner.ml"

  | 24 ->
# 106 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Linput" ; Linput )
# 458 "ms_scanner.ml"

  | 25 ->
# 107 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Loutput" ; Loutput )
# 463 "ms_scanner.ml"

  | 26 ->
# 108 "ms_scanner.mll"
            (  scanner_debug_print "Scanner:Lwhere" ; Lwhere )
# 468 "ms_scanner.ml"

  | 27 ->
# 109 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lcomma" ; Lcomma )
# 473 "ms_scanner.ml"

  | 28 ->
# 110 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lbar" ; Lbar )
# 478 "ms_scanner.ml"

  | 29 ->
# 111 "ms_scanner.mll"
        (  scanner_debug_print "Scanner:Lexclusive" ; Lexclusive )
# 483 "ms_scanner.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_lexer_rec lexbuf __ocaml_lex_state

;;

# 112 "ms_scanner.mll"
 

# 492 "ms_scanner.ml"
